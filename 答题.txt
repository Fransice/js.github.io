面试官你好，我叫张宇，17年毕业，入职上海公司做Unity，AR、VR相关开发，后因为想自己做项目Unity开发过于庞杂就开始自学前端开发
然后入职了杭州手滑科技公司，继续做前端开发，主要做了粉丝应援的多平台项目（设计app、小程序、H5、后台管理等），还做了一些活动的微信公众号开发
因为在一月份公司业务全面转型，公司就裁掉了整个技术部，所以现在想找一个合适的公司


1.localStorage Cookie 区别

大小：5MB  4KB
存储时间：永久  单次浏览器打开


2.css选择器

id选择器
类选择器
标签选择器
子选择器
伪类选择器
通配符选择器


3.盒子模型，以及标准情况和IE下的区别

IE模型的高度为：content的高度+padding+border


4.如何实现高度自适应

vh
定位


5.prototype和 ——proto—— 区别

每一个实例对象都有一个proto属性，该属性指向原型对象，这个实例对象的构造函数有一个原型属性prototype，与实例的proto指向同一个对象
当一个对象在查找一个属性的时候，自身没有就会根据proto向它的原型进行查找，知道查到object.prototype.proto为null，这样就形成了原型链


6._construct 是什么

？？


7.new 是怎么实现的

首先创建一个空对象
将这个空对象的原型对象指向构造函数的原型属性，从而继承原型上的方法
将this指向这个空对象，执行构造函数中的代码，获取私有属性
如果构造函数返回一个对象res


8.promise的精髓，以及优缺点

优点：避免了回调地狱
缺点：无法取消

axios为什么可以取消：使用了clearToken


9.如何实现H5手机端的适配

媒体查询


10.rem 、 flex 的区别（root em）

rem  基准值为根节点字体大小
em   为自身节点字体大小


11.em 和 px 的区别

em  父节点字体大小
px  固定大小（相对于分辨率）


12.如何去除url中的#号

路由mode==history


13.webpack和gulp的优缺点

gulp: 
基于任务的自动化打包
易于学习和开发多页面
不适合单页面开发或者自定义模块开发

webpack
模块化打包工具
可模块化打包任何资源，适配模块化打包，适合单页面开发
学习成本低，配置复杂，js体积过大


14.如何实现异步加载

async
defer


15.如何实现分模块打包（多入口）

webpack添加多入口


16.前端性能优化

1js css；2 图片；3 缓存预加载； 4 SSR； 5 多域名加载；6 负载均衡


17.并发请求资源数上限

6


18.base64为什么能提升性能，缺点

优点：减少了http请求，可随html同步下载下来
缺点：图片过大字节很大，适用于小图片


19.介绍webp这个图片文件格式

更适应网络的图片格式，大小更小


20.Promise如何实现的

1.promise自身相当于一个状态机，包含三个状态 pending、fulfilled、rejected
2.promis原型上有then方法，then会返回一个新的promise对象，并将结果return


21.异步请求，低版本fetch如何低版本适配

？？？？？？？


22.ajax如何区里跨域

GET：jsonp   
CORS


23.CORS如何设置

设置请求头


24.介绍同源策略

浏览器为保证网络接口安全，要求必须为同域名，同端口，否则无法请求数据


25.介绍原型链

？？？？？？？


26.如何继承

1.原型链继承
2.构造函数继承
3.组合继承


27.组件传值

父==》子   props
子==》父   emit
子==》子   emit  on 

28.生命周期

beforcreate
create
beforMount
mounted
beforUptate
Uptated
beforDesory
desoryed


29.url==>页面展示

1.输入URL后到DNS服务器查找URL指定服务器IP
2.浏览器与服务器直接建立TCP链接
3.建立链接后浏览器会向服务器发送http GET请求
4.浏览器开始下载资源


30.url展示页面

1.当发送一个url时，浏览器会处理这个请求，同时远程DNS服务器启动DNS查询查找对应的IP
2.浏览器与web服务器开启TCP连接
3.建立连接之后，浏览器会向完成服务器发送http get请求，远程服务器开始找到资源并使用http返回值200的http响应状态表示正常响应
4.web服务器提供资源，客户端开始下载资源


31.style引入css和使用.css引用css文件有什么区别

style是HTML的能力，可以跟随HTML同步加载，没有兼容问题
.css是css的能力，需要等待HTML加载完成后css加载时才会引用进入



32.小程序中的性能优化怎么考虑的

1.分包加载
2.减少setData
3.首屏使用骨架屏减少用户等待焦虑


33.常见状态码

100 表示继续，医保在post请求
200 正常返回信息
201 请求成功并创建了新资源
202 服务器接收到请求还未处理
301 请求的网页移动到了新位置
302 重定向
303 临时重定向
304 自从上次之后网页未发送改变
400 服务器无法理解请求
401 请求未授权
403 禁止访问
404 找不到对应资源
500 最常见的服务器错误
503 服务器暂时无法处理请求


34.keep-live怎么使用

使得包含的组件保留状态避免重新渲染


35.map forEach区别

map：返回一个新的数组
forEach：无返回值，适用于只遍历数组


36.https为什么比http安全

数据传输进行了SSL加密


35.微信小程序原理

采用JavaScrpt wxml wxss 三种技术开发的单页面应用


38.TCP三次握手

第一次：客户端发送网络包，服务端收到，结论 ：客户端、服务端接收正常
第二次：服务器发送数据包到客户端客户端接收，服务端发送正常
第三次：客户端发送消息到服务端，客户端接收信息正常

四次挥手

第一次：客户端向服务端发送关闭连接信息
第二次：服务器向客户端发送接收到连接关闭请求，但还没关闭‘
第三次：服务端向客户端发送连接关闭，并等待客户端确认
第四次：客户端向服务端发送ok



39.vue组件传值

父到子：prop
子到父：emit
子到子：emit+on


40.vue生命周期、updeta钩子

beforcreate
Created
beforMount
mounted
beforUptate
Uptated
beforDesory
desoryed


41.重绘、重排

重绘：部分元素发生改变，如某个元素颜色发生改变
重排：重新生成布局，重新排列元素


42.http报文包含哪些部分

请求行
请求头
空行
请求数据


43.cookie 和 token 都存放在 header 中，为什么不会劫持 token？

cookie浏览器会自动带上而token不会自动带上
cookie存在的地方固定，有风险
token可多地方存储，服务器加密发送到客户端，每次请求都进行验证

44.完整的http请求过程

1.浏览器发起请求，dns服务器解析地址到ip地址
2.浏览器和web服务器发起TCP三次握手
3.建立TCP请求后发起http请求
4.服务器响应http请求，浏览器下载资源
5.浏览器解析html请求，然后请求html中的资源（js、css、图片等）
6.浏览器渲染页面
7.服务器关闭tcp


45.call、bind、apply区别

call：改变this指向后立即执行，传入参数列表
apply：改变this指向后立即执行，传入数组
bind：改变this指向后不会立即执行，而是返回一个永久改变的this指向函数


46.webpack loader和plugin的区别

loader：对文件进行操作
plugin：

47.整个前端的性能优化分为几大类

静态资源优化
接口访问优化
页面渲染速度优化

面试官你好，我叫张宇，17年毕业，入职上海公司做Unity，AR、VR相关开发，后因为想自己做项目Unity开发过于庞杂就开始自学前端开发
然后入职了杭州手滑科技公司，继续做前端开发，主要做了粉丝应援的多平台项目（设计app、小程序、H5、后台管理等），还做了一些活动的微信公众号开发
因为在一月份公司业务全面转型，公司就裁掉了整个技术部，所以现在想找一个合适的公司


48.时间机制

